/***************************************************************
 *  ALL-PREDICTOR SLOPE STACK  (corePredictor + LST / LAI / FPAR)
 *  Author: Horia Olariu • 2025-06-24  (homogeneous-collection fix)
 ***************************************************************/

/*** 1 ─ USER SETTINGS *****************************************/
var FIRST_YEAR      = 2000;
var LAST_YEAR_PRED  = 2023;     // corePredictor last year
var LAST_YEAR_LST   = 2024;     // lstLaiFpar   last year
var MIN_OBS         = 20;       // min valid years per pixel
var P_THRESH        = 0.05;     // Kendall two-tailed p
var SCALE           = 500;      // metres

var AOI = ee.FeatureCollection(
            'projects/horia-olariu/assets/Greening/CONUS_Union')
          .filter(ee.Filter.eq('name', 'CONUS_outline'))
          .geometry();

var CORE_BANDS = [
  'prcp','tmax','tmin','vpd','snowDays',
  'prcp_Winter','prcp_Spring','prcp_Summer','prcp_Fall',
  'tmax_Winter','tmax_Spring','tmax_Summer','tmax_Fall',
  'tmin_Winter','tmin_Spring','tmin_Summer','tmin_Fall',
  'vpd_Winter','vpd_Spring','vpd_Summer','vpd_Fall'
];

var LST_BANDS = [
  'LST_Day_1km','LST_Night_1km',
  'LST_Day_1km_Winter','LST_Day_1km_Spring',
  'LST_Day_1km_Summer','LST_Day_1km_Fall',
  'LST_Night_1km_Winter','LST_Night_1km_Spring',
  'LST_Night_1km_Summer','LST_Night_1km_Fall',
  'Lai','Fpar',
  'Lai_Winter','Lai_Spring','Lai_Summer','Lai_Fall',
  'Fpar_Winter','Fpar_Spring','Fpar_Summer','Fpar_Fall'
];

var CP_ROOT  = 'projects/horia-olariu/assets/Greening/corePredictor_';
var LST_ROOT = 'projects/horia-olariu/assets/Greening/lstLaiFpar_';


/*** 2 ─ COMMON THEMATIC × STABLE MASK  (Option C) *************/
// 2.1  remove LC_Type1 classes 12,13,14,16,17
var BAD_CLASSES = [12, 13, 14, 16, 17];
var lc2023 = ee.ImageCollection('MODIS/061/MCD12Q1')
               .filterDate('2023-01-01', '2024-01-01')
               .first()
               .select('LC_Type1');

var thematicMask = lc2023
                     .remap(BAD_CLASSES, [0,0,0,0,0], 1)
                     .selfMask();                    // 1 = good pixels

// 2.2  stable LC_Type5 (unchanged 2001 → 2023)
var lcType5 = ee.ImageCollection('MODIS/061/MCD12Q1').select('LC_Type5');
var lc2001  = lcType5.filterDate('2001-01-01','2002-01-01').first();
var lc2023t = lcType5.filterDate('2023-01-01','2024-01-01').first();

function recodeForest(img){
  var forest = img.eq(1).or(img.eq(2)).or(img.eq(3)).or(img.eq(4));
  return img.where(forest, 100);
}
var lcStableMask = recodeForest(lc2001)
                    .eq(recodeForest(lc2023t))
                    .selfMask();

// 2.3  final mask
var COMMON_MASK = thematicMask.updateMask(lcStableMask).clip(AOI);


/*** 3 ─ SCALE-FACTOR HELPER **********************************/
function scaleFactor(name){
  if (name.indexOf('LST_') === 0) return 0.01;   // °C  = int * 0.01
  if (name.indexOf('Lai')  === 0) return 0.001;  // LAI = int * 0.001
  if (name.indexOf('Fpar') === 0) return 0.0001; // FPAR= int * 0.0001
  return 1;
}


/*** 4 ─ ROBUST-SLOPE FUNCTION  (homogeneous fix) *************/
function makeSlope(baseName, root, lastYear){

  var list = [];
  for (var y = FIRST_YEAR; y <= lastYear; y++){

    var img  = ee.Image(root + y);

    /* 4.1  raw band (may be 100 % masked) */
    var raw  = img.select(baseName + '_' + y)
                  .multiply(scaleFactor(baseName))
                  .toFloat();

    /* 4.2  keep mask, force numeric type */
    var msk  = raw.mask();
    var band = raw.unmask(0)        // ensures Float even if fully masked
                  .updateMask(msk)  // restore original mask
                  .rename(baseName)
                  .updateMask(COMMON_MASK)
                  .addBands(ee.Image.constant(y).rename('year').toInt())
                  .set('system:time_start',
                       ee.Date.fromYMD(y,1,1).millis());

    list.push(band);
  }

  var coll  = ee.ImageCollection(list);

  var slope = coll.select(['year', baseName])
                  .reduce(ee.Reducer.sensSlope())
                  .select('slope');

  var tau   = coll.select(['year', baseName])
                  .reduce(ee.Reducer.kendallsCorrelation())
                  .select(0);
  var n     = coll.select(baseName).reduce(ee.Reducer.count());

  var z = tau.multiply(
            n.multiply(n.subtract(1)).multiply(9)
             .divide(n.multiply(2).add(5).multiply(2))
             .sqrt());

  var p = z.abs().multiply(-1/Math.sqrt(2)).erf().add(1).multiply(2);

  return slope.updateMask(n.gte(MIN_OBS).and(p.lte(P_THRESH)))
              .rename(baseName + '_slope');
}


/*** 5 ─ CORE-PREDICTOR SLOPES ********************************/
var coreSlope = ee.Image.cat(
  CORE_BANDS.map(function(b){ return makeSlope(b, CP_ROOT, LAST_YEAR_PRED); })
).clip(AOI);


/*** 6 ─ LST / LAI / FPAR SLOPES ******************************/
var lstSlope = ee.Image.cat(
  LST_BANDS.map(function(b){ return makeSlope(b, LST_ROOT, LAST_YEAR_LST); })
).clip(AOI);


/*** 7 ─ CONCATENATE & EXPORT *********************************/
var allPredictorSlopes = coreSlope.addBands(lstSlope)
                                  .updateMask(COMMON_MASK);

Export.image.toAsset({
  image:      allPredictorSlopes,
  description:'AllPredictor_Slopes',
  assetId:    'projects/horia-olariu/assets/Greening/allPredictorSlopes',
  region:     AOI,
  scale:      SCALE,
  maxPixels:  1e13
});


/*** 8 ─ QUICK-LOOK LAYERS ************************************/
Map.centerObject(AOI, 4);

Map.addLayer(allPredictorSlopes.select('tmax_slope'),
             {min:-0.1, max:0.1,
              palette:['#67001f','#b2182b','#d6604d','#f4a582','#f7f7f7',
                       '#92c5de','#4393c3','#2166ac','#053061']},
             'Tmax slope (°C yr⁻¹)');

Map.addLayer(allPredictorSlopes.select('Lai_slope'),
             {min:-0.002, max:0.002,
              palette:['#053061','#2166ac','#4393c3','#92c5de','#f7f7f7',
                       '#f4a582','#d6604d','#b2182b','#67001f']},
             'LAI slope (yr⁻¹)');
             
             
Map.addLayer(allPredictorSlopes.select('LST_Day_1km_Fall_slope'),
             {min:-0.1, max:0.1,
              palette:['#67001f','#b2182b','#d6604d','#f4a582','#f7f7f7',
                       '#92c5de','#4393c3','#2166ac','#053061']},
             'LST slope (°C yr⁻¹)');
